@using BlazorProject.Data
@using MudExtensions

<MudDialog>
    <TitleContent>
        <MudText
            Typo="Typo.h5"
            Align="Align.Center"
        >
            Create Portfolio
        </MudText>
    </TitleContent>

    <DialogContent>
        <MudTextField
            @bind-Value="Name"
            Label="Enter name"
            Required
        />
        <MudSelectExtended
            ItemCollection="AllInvestors"
            ToStringFunc="@(investor => investor?.Name)"
            Label="Select investor"
            @bind-Value="SelectedInvestor"
            Required
        />

        @foreach (var selectedAsset in SelectedAssetDistribution) {
            var otherSelectedSecurities = SelectedAssetDistribution
                .Where(ss => ss.Asset != null)
                .Select(ss => ss.Asset);

            var availableSecurities = AllAssets.Except(otherSelectedSecurities).ToList();

            <MudStack Row="true">
                <MudSelectExtended
                    ItemCollection="availableSecurities"
                    ToStringFunc="@(Asset => Asset?.Name)"
                    Label="Select Asset"
                    Style="width: 300px"
                    Required
                    @bind-Value="selectedAsset.Asset"
                />
                <div style="width: 80px">
                    <MudNumericField
                        HelperText="% of portfolio"
                        Min="0"
                        Max="100"
                        Step="10"
                        Required
                        @bind-Value="selectedAsset.Percentage"
                        Immediate
                    />
                </div>
            </MudStack>
        }

        <MudIconButton
            Icon="@Icons.Material.Filled.Add"
            Size="Size.Small"
            OnClick="AddAsset"
        />
    </DialogContent>

    <DialogActions>
        <MudText>
            Total percentage:
            <span style="color:@(TotalPercentage == 100 ? "green" : "red")">@TotalPercentage%</span>
        </MudText>
        <MudButton OnClick="@(() => MudDialog.Cancel())">Cancel</MudButton>
        <MudButton
            Color="Color.Primary"
            Disabled="TotalPercentage != 100"
            OnClick="@(() => MudDialog.Close(DialogResult.Ok(new Portfolio { Name = Name, InvestorId = SelectedInvestor!.Id, AssetDistribution = SelectedAssetDistribution.ToDictionary(x => x.Asset!.Id, x => x.Percentage) })))"
        >
            OK
        </MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public List<Investor> AllInvestors { get; set; } = [];

    [Parameter] public List<Asset> AllAssets { get; set; } = [];

    string Name { get; set; } = string.Empty;

    private Investor? SelectedInvestor { get; set; }

    private record SelectedAsset(Asset? Asset, double Percentage) {
        public Asset? Asset { get; set; } = Asset;
        public double Percentage { get; set; } = Percentage;
    }

    List<SelectedAsset> SelectedAssetDistribution { get; set; } = [];

    private void AddAsset() {
        var remainingPercentage = 100 - SelectedAssetDistribution.Sum(x => x.Percentage);

        SelectedAssetDistribution.Add(new(null, remainingPercentage));
    }

    protected override void OnInitialized() {
        AddAsset();
        base.OnInitialized();
    }

    private double TotalPercentage => SelectedAssetDistribution.Sum(x => x.Percentage);
}