@page "/todo"
@rendermode InteractiveServer
@inject ILogger<Todo> Logger

@{
    var PendingTodos = todos.Count(t => !t.IsCompleted);
}
<h3>Todo: @PendingTodos @(PendingTodos.Equals(1) ? "task" : "tasks")</h3>

<ul>
    @foreach (var todo in todos) {
        <li>
        <input type="checkbox" @bind="todo.IsCompleted"/>
        <input @bind="todo.Title"/> â€“ @(todo.IsCompleted ? "Completed" : "Pending")
    </li>
    }
</ul>

<input @bind="newTodoTitle"/>

<button @onclick="AddTodo">Add Todo</button>

@code {

    List<TodoItem> todos = new List<TodoItem>();
    
    string newTodoTitle = String.Empty;
 
    public class TodoItem
    {
        public string Title { get; set; } = string.Empty;

        public bool IsCompleted { get; set; } = false;
    }

    private void AddTodo(MouseEventArgs obj) {
        Logger.LogInformation("Adding new todo: {NewTodoTitle}", newTodoTitle);
        
         if (!string.IsNullOrWhiteSpace(newTodoTitle)) {
            todos.Add(new TodoItem() {Title = newTodoTitle});
            newTodoTitle = string.Empty;
         }
    }

}