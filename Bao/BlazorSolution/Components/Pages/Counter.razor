@page "/counter"
@using Microsoft.AspNetCore.StaticFiles.Infrastructure
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

@if (currentCount < 10) {
<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click</button>

<MyButton MyOnClick="IncrementCount" class="btn btn-success">Childcontent whatever special</MyButton>
}
else {
    <p>You win!</p>
}

<div class="mt-3">
     @* <input @oninput="OnInput" value="@text"/> *@
     <input 
         @bind="text" 
         @bind:event="oninput"
         @bind:after="Search"
    />
     <button @onclick="OnClick">Clear</button>
     <p>@text</p>
     <p>@searchResults</p>
</div>

@code {
    private int currentCount = 0;

    string text = "";
    
    string searchResults = "";

    private void IncrementCount(MouseEventArgs e) => currentCount++;

    // async Task IncrementCountAsync() {
    //     await Task.Delay(500);
    //     currentCount+=2;
    // }

    [Parameter] public int IncrementAmount { get; set; } = 1;

    private void OnInput(ChangeEventArgs obj) => text = (string)obj.Value!;

    private void OnClick(MouseEventArgs e) => text = "";

    async private Task Search() {
        searchResults = $"You searched for {text}";
        await Task.Delay(500);
        searchResults = $"Found {(Random.Shared.Next(2).Equals(1) ? "some" : "no")} results.";
    }

}